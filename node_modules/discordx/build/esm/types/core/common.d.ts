import type { ApplicationCommandPermissions, Guild, Message, Snowflake } from "discord.js";
import type { ApplicationCommandMixin, Client, DApplicationCommand, DComponentButton, DComponentSelectMenu, DefaultPermissionResolver, DSimpleCommand, SimpleCommandMessage } from "../../index.js";
export declare type Awaitable<T> = Promise<T> | T;
export declare type IPrefix = string | string[];
export declare type IPrefixResolver = string | string[] | ((message: Message) => Awaitable<string | string[]>);
export declare type IDefaultPermission = boolean | DefaultPermissionResolver;
export declare type IPermissions = ApplicationCommandPermissions | ApplicationCommandPermissions[] | ((guild: Guild, command: ApplicationCommandMixin | SimpleCommandMessage) => ApplicationCommandPermissions | ApplicationCommandPermissions[] | Promise<ApplicationCommandPermissions> | Promise<ApplicationCommandPermissions[]>);
export declare type IGuild = Snowflake | Snowflake[] | ((client: Client, command: DApplicationCommand | DComponentButton | SimpleCommandMessage | DComponentSelectMenu | undefined) => Snowflake | Snowflake[] | Promise<Snowflake> | Promise<Snowflake[]>);
export declare type ISimpleCommandByName = {
    command: DSimpleCommand;
    name: string;
};
