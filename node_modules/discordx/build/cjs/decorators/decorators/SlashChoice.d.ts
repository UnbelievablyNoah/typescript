import type { ParameterDecoratorEx } from "@discordx/internal";
import type { NotEmpty, SlashChoicesType } from "../../index.js";
/**
 * An option of a Slash command can implement an autocompletion feature for ``string`` and ``number`` types
 * @param name string
 * ___
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 * @category Decorator
 */
export declare function SlashChoice<T extends string>(name: NotEmpty<T>): ParameterDecoratorEx;
/**
 * An option of a Slash command can implement an autocompletion feature for ``string`` and ``number`` types
 * @param name number
 * ___
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 * @category Decorator
 */
export declare function SlashChoice(name: number): ParameterDecoratorEx;
/**
 * An option of a Slash command can implement an autocompletion feature for ``string`` and ``number`` types
 * @param name string
 * @param value number
 * ___
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 * @category Decorator
 */
export declare function SlashChoice<T extends string>(name: NotEmpty<T>, value: number): ParameterDecoratorEx;
/**
 * An option of a Slash command can implement an autocompletion feature for ``string`` and ``number`` types
 * @param name string
 * @param value string
 * ___
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 * @category Decorator
 */
export declare function SlashChoice<T extends string, V extends string>(name: NotEmpty<T>, value: NotEmpty<V>): ParameterDecoratorEx;
/**
 * An option of a Slash command can implement an autocompletion feature for ``string`` and ``number`` types
 * @param choices array/object of choices
 * ___
 * [View Documentation](https://discord-ts.js.org/docs/decorators/commands/slashchoice)
 * @category Decorator
 */
export declare function SlashChoice(choices: SlashChoicesType): ParameterDecoratorEx;
