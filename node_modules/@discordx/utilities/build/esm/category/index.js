import { DApplicationCommand, DDiscord, DSimpleCommand, MetadataStorage, Modifier, } from "discordx";
export class CategoryMetaData {
    static get(category) {
        return [
            ...MetadataStorage.instance.applicationCommandSlashes,
            ...MetadataStorage.instance.simpleCommands,
        ].filter((cmd) => cmd.category === category);
    }
}
export function Category(name) {
    return function (target, key, descriptor) {
        MetadataStorage.instance.addModifier(Modifier.create((original) => {
            if (original instanceof DDiscord) {
                [
                    ...original.applicationCommands,
                    ...original.simpleCommands,
                ].forEach((ob) => {
                    ob.category = name;
                });
            }
            else {
                original.category = name;
            }
        }, DApplicationCommand, DSimpleCommand, DDiscord).decorateUnknown(target, key, descriptor));
    };
}
export function NickName(nickname) {
    return function (target, key, descriptor) {
        MetadataStorage.instance.addModifier(Modifier.create((original) => {
            original.nickName = nickname;
        }, DApplicationCommand, DSimpleCommand).decorateUnknown(target, key, descriptor));
    };
}
//# sourceMappingURL=index.js.map